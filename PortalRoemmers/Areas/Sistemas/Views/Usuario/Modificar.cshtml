@model PortalRoemmers.Areas.Sistemas.Models.Usuario.UsuarioModels
@using PortalRoemmers.Security
@using System.Text
@{
    ViewBag.Title = "ModificarPersonal";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!--Roemmers-->
@section css {
    @Styles.Render("~/Content/selectBusqueda_CSS")
}

<div class="white-box p-l-20 p-r-20">
    <h3 class="box-title m-b-0"> Modificar Usuario </h3>
    <p class="text-muted m-b-30 font-13">Completar todos los campos necesarios.  </p>
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Modificar", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal form-material" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.idAcc)
                @Html.HiddenFor(model => model.confirmEmail)
                @Html.HiddenFor(model => model.userpass)
                @Html.HiddenFor(model => model.confirmPassword)
                @Html.HiddenFor(model => model.userCreUsu)
                @Html.HiddenFor(model => model.fchCreUsu)
                @Html.HiddenFor(model => model.idMen)
                <div class="form-group">
                    <label class="col-md-12">@Html.LabelFor(model => model.idEmp)  <span class="text-danger">*</span></label>
                    <div class="col-md-12">
                        @Html.DisplayFor(model => model.empleado.nomComEmp)
                        @Html.HiddenFor(model => model.idEmp)
                        @Html.ValidationMessageFor(model => model.idEmp, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-12">@Html.LabelFor(model => model.idNapro)  <span class="text-danger">*</span></label>
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.idNapro, (SelectList)ViewBag.nivelApro, "Seleccionar....", htmlAttributes: new { @class = "form-control form-control-line" })
                        @Html.ValidationMessageFor(model => model.idNapro, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <label class="col-md-12">@Html.LabelFor(model => model.email)  <span class="text-danger">*</span></label>
                    <div class="col-md-12">
                        @Html.DisplayFor(model => model.email)
                        @Html.HiddenFor(model => model.email)
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-md-12">@Html.LabelFor(model => model.username)  <span class="text-danger">*</span></label>
                    <div class="col-md-12">
                        @Html.DisplayFor(model => model.username)
                        @Html.HiddenFor(model => model.username)
                        @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <label class="col-md-12">@Html.LabelFor(model => model.idEst)</label>
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.idEst, (SelectList)ViewBag.EstU, "Seleccionar....", htmlAttributes: new { @class = "form-control form-control-line" })
                        @Html.ValidationMessageFor(model => model.idEst, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-sm-12">Imagen Actual</label>
                    <div class="col-md-10">
                        <img id="output" width="100" height="100" src="@Url.Action("convertirImagen", "Usuario", new {idAcc =Model.idAcc})" />
                    </div>
                </div>

                <div class="form-group">
                    <label class="col-sm-12">@Html.LabelFor(model => model.rutaImgPer)</label>
                    <div class="col-sm-12">
                        <div class="fileinput input-group fileinput-new" data-provides="fileinput">
                            <div class="form-control" data-trigger="fileinput"> <i class="glyphicon glyphicon-file fileinput-exists"></i> <span class="fileinput-filename">Foto.jpeg</span></div>
                            <span class="input-group-addon btn btn-default btn-file">
                                <span class="fileinput-new">Foto</span> <span class="fileinput-exists">Cambiar</span>
                                <input type="hidden" value="" name="..."><input type="file" name="file" onchange="loadFile(event)">
                            </span> <a href="#" class="input-group-addon btn btn-default fileinput-exists" data-dismiss="fileinput">Remover</a>
                        </div>
                    </div>
                </div>

                <button class="btn btn-info btn-rounded btn-outline waves-effect waves-light m-r-10">Guardar</button>
                @Html.ActionLink("Volver", "Index", new { menuArea = SessionPersister.ActiveMenu, menuVista = SessionPersister.ActiveVista, pagina = SessionPersister.Pagina, search = SessionPersister.Search }, new { @Class = "btn btn-default btn-rounded btn-outline waves-effect waves-light" })
            }
        </div>
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/Bundles/selectBusqueda_JS")
    <script src="~/Scripts/js/jasny-bootstrap.js"></script>
    <script src="~/Areas/Sistemas/Scripts/Sistemas.js"></script>
    <script>
        $(document).ready(function () {
        });
        var loadFile = function (event) {
            var output = document.getElementById('output');
            output.src = URL.createObjectURL(event.target.files[0]);
        };
    </script>
}
