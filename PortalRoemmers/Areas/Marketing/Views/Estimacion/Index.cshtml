@model  PortalRoemmers.ViewModels.IndexViewModel
@using PortalRoemmers.Helpers
@using PortalRoemmers.Security
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section css {
    @Styles.Render("~/Content/tablaExport_CSS")
    @Styles.Render("~/Content/datepicker_CSS")
    <style type="text/css">
        .group {
        font-weight:bold;
        }
    </style>
}
<!--Detalle Solicitud de Gastos-->
<div id="responsive-modal-solGas" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h2 class="modal-title">
                    <label id="act"></label>
                    <br />
                    Detalle de Solicitudes
                </h2>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="table-responsive m-t-10" style="clear: both;">
                            <div class="col-sm-12">
                                <table id="tb_solGas" class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th class="text-center">N°</th>
                                            <th class="text-center">Codigo</th>
                                            <th class="text-center">Titulo</th>
                                            <th class="text-center">Estado</th>
                                            <th class="text-center">Fec.Eve.</th>
                                            <th class="text-center">Imp.Neto</th>
                                            <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="persist"></th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger waves-effect text-left" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>
<!--Detalle Solicitud de Gastos-->
<div class="panel panel-default">
    <div class="panel-heading box-title m-b-0"><h2>Mantenimiento de Estimacion de Gastos</h2></div>
    <div class="panel-body">
        <div class="form-group">
            @{ string v = ""; try { v = TempData["mensaje"].ToString(); } catch { }}
            @(new HtmlString(v))
            @{ string v1 = ""; try { v = TempData["mensaje1"].ToString(); } catch { }}
            @(new HtmlString(v1))
        </div>
        @using (Html.BeginForm("Index", "Estimacion", new { menuArea = SessionPersister.ActiveMenu, menuVista = SessionPersister.ActiveVista }, FormMethod.Post))
        {
            <div class="row show-grid">
                    <div class="col-md-5">
                        <div class="form-group">
                            <label for="search">NOMBRE o CÓDIGO</label>
                            <input type="text" id="search" name="search" class="form-control" placeholder="Buscar" value="@ViewBag.search">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="desMen">DESDE</label>
                            <input class="form-control form-control-line datepicker" id="fchEveSolGasI" name="fchEveSolGasI" placeholder="dd/mm/aaaa" autocomplete="off" value="@ViewBag.primero">
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="desMen">HASTA</label>
                            <input class="form-control form-control-line datepicker" id="fchEveSolGasF" name="fchEveSolGasF" placeholder="dd/mm/aaaa" autocomplete="off" value="@ViewBag.actual">
                        </div>
                    </div>
                    <div class="col-md-1">
                        <span class="input-group-btn">
                            <button class="btn waves-effect waves-light btn-info">
                                <i class="fa fa-search"></i>
                            </button>
                        </span>
                    </div>
                </div>
        }
        <br />
        <div class="row">
            <div class="col-xs-6">
                @Html.ActionLink("Crear Estimacion", "Registrar", "Estimacion", new { Area = "Marketing" }, new { @Class = "btn btn-info btn-rounded" })
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="white-box">
                    <h3 class="box-title m-b-0"></h3>
                    <p class="text-muted m-b-30"></p>
                    <div class="table-responsive">
                        <table id="example23" class="display nowrap table display" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>C&oacutedigo</th>
                                    <th>Actividad</th>
                                    <th>Fecha Inicio</th>
                                    <th>Fecha Final</th>
                                    <th>Especialidad</th>
                                    <th class="text-right">Estimación</th>
                                    <th class="text-right">Real</th>
                                    <th class="text-right">Est. x Gastar</th>
                                    <th class="hidden"></th>
                                    <th class="hidden"></th>
                                    <th class="hidden"></th>
                                </tr>
                            </thead>
                            <tfoot>
                                <tr>
                                    <th></th>
                                    <th>C&oacutedigo</th>
                                    <th>Actividad</th>
                                    <th>Fecha Inicio</th>
                                    <th>Fecha Final</th>
                                    <th>Especialidad</th>
                                    <th class="text-right">Estimación</th>
                                    <th class="text-right">Real</th>
                                    <th class="text-right">Est. x Gastar</th>
                                    <th class="hidden"></th>
                                    <th class="hidden"></th>
                                    <th class="hidden"></th>
                                </tr>
                            </tfoot>
                            <tbody>
                                @foreach (var item in Model.Estimaciones)
                                {
                                <tr>
                                    <td class="text-nowrap">
                                        <a href="@Url.Action("Imprimir", "Estimacion", new { Area = "Marketing", html = false, est = item.idActiv })" data-toggle="tooltip" title="Imprimir"> <i class="fa fa-print text-inverse m-r-10"></i> </a>
                                        @{
                                            //solo algunos lo ven
                                            if (item.idEst == ConstantesGlobales.estadoRegistrado || item.idEst == ConstantesGlobales.estadoModificado)
                                            {
                                                <a href="@MyExtensions.ActionUrl("Modificar", "Estimacion", new { Area = "Marketing", id = item.idActiv,modulo="Index" })" data-toggle="tooltip" title="Editar"> <i class="fa fa-pencil text-inverse m-r-10"></i> </a>
                                                <a href="@MyExtensions.ActionUrl("Eliminar", "Estimacion", new { Area = "Marketing", id = item.idActiv })" data-toggle="tooltip" title="Anular" id="sa-params"> <i class="fa fa-close text-danger  m-r-10"></i> </a>
                                            }
                                        }
                                        <a id="rel-solGas" href="#responsive-modal-solGas" data-toggle="modal" title="Ver Gastos" class="open-solGas m-r-12"><i class="icon-book-open  m-r-10"></i></a>
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.idActiv)</td>
                                    <td>@Html.DisplayFor(modelItem => item.actividad.nomActiv)</td>
                                    <td>@Html.DisplayFor(modelItem => item.actividad.fchIniActiv)</td>
                                    <td>@Html.DisplayFor(modelItem => item.actividad.fchFinActiv)</td>
                                    <td>@Html.DisplayFor(modelItem => item.actividad.especialidad.nomEsp)</td>
                                    <td class="text-right">@Html.DisplayFor(modelItem => item.moneda.simbMon) @Html.DisplayFor(modelItem => item.monEstGas) </td>
                                    @{
                                        //Gastos Reales
                                        var dgasto = Model.Estimaciones.SelectMany(x => x.detalleEstim_Gas.SelectMany(y => y.detSolGas, (parent, child) => new { idAct = parent.idActiv, idSol = child.idSolGas, idMon = child.solicitud.idMon, tc = child.solicitud.valtipCam, idEst = child.solicitud.idEst, monto = child.monTotal }));

                                        double gasto = 0;
                                        double real = 0;

                                        if (dgasto.Count() != 0)
                                        {
                                            foreach (var g in dgasto)
                                            {
                                                if (g.idAct == item.idActiv && (g.idEst != ConstantesGlobales.estadoAnulado && g.idEst != ConstantesGlobales.estadoRechazado && g.idEst != ConstantesGlobales.estadoLiquidado && g.idEst != ConstantesGlobales.estadoNoAtendido))
                                                {
                                                    gasto = g.monto;

                                                    if (g.idMon != ConstantesGlobales.monedaDol)
                                                    {
                                                        gasto = gasto / g.tc;
                                                    }
                                                    real = real + gasto;
                                                }
                                            }
                                        }
                                        real = Math.Round(real, 2);
                                        ////////////////////////////////////////////////////////////////
                                        if (item.idActiv == "20190000111")
                                        {
                                            real = Math.Round(real, 2);
                                        }
                                        ////////////////////////////////////////////////////////////////
                                        var destim = item.detalleEstim_Gas.ToList();
                                        double gast = 0;
                                        double estim = 0;
                                        if (destim.Count != 0)
                                        {
                                            foreach (var f in destim)
                                            {
                                                gast = f.salReal;
                                                estim = estim + gast;
                                            }
                                        }
                                        double resto = 0;
                                        resto = estim - real;

                                    }
                                    <td class="text-right">@Html.DisplayFor(modelItem => item.moneda.simbMon)  @String.Format("{0:#,##0.00}", real)</td>
                                    <td class="text-right">@Html.DisplayFor(modelItem => item.moneda.simbMon)  @String.Format("{0:#,##0.00}", resto)</td>
                                    <td class="hidden">@Html.DisplayFor(modelItem => item.presupuesto.Monto)</td>
                                    <td class="hidden">@Html.DisplayFor(modelItem => item.presupuesto.Estim)</td>
                                    <td class="hidden">@Html.DisplayFor(modelItem => item.presupuesto.Saldo)</td>
                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">

        </div>
    </div>

    <div class="panel-footer"></div>
</div>
@section scripts
{
    @Scripts.Render("~/Bundles/tablaExport_JS")
    @Scripts.Render("~/Bundles/bloqueo_JS")
    @Scripts.Render("~/Bundles/datepicker_JS")
    <script src="~/Content/plugins/bower_components/sweetalert/sweetalert.min.js"></script>
    <script src="~/Areas/Marketing/Scripts/Marketing.js"></script>

    <script src="//cdn.datatables.net/rowgroup/1.0.4/js/dataTables.rowGroup.min.js"></script>
    <script>
        $(document).ready(function () {
            //--
            //-------------------------
            $('#example23').DataTable({
                dom: 'Bfrtip'
                , buttons: [
                    'copy', 'csv', 'excel', 'pdf', 'print'
                ]
                , "columnDefs": [
                    //{
                    //    "render": function (data, type, row) {
                    //
                    //        return data + ' (' + row[3] + ')';
                    //    },
                    //    "targets": 6
                    //},
                    {
                        "visible": true
                        , "targets": 5
                    }
                ]
                , "order": [[5, 'asc']]
                , "rowGroup": {
                    startRender: null,
                    endRender: function (rows, group) {
                        var total = rows.data().pluck(6).reduce(function (a, b) { return a + b.replace('$', '').replace(',', '') * 1; }, 0);
                        var impacto = rows.data().pluck(7).reduce(function (a, b) { return a + b.replace('$', '').replace(',', '') * 1; }, 0);
                        var estim = rows.data().pluck(8).reduce(function (a, b) { return a + b.replace('$', '').replace(',', '') * 1; }, 0);
                        var avg = rows.data().pluck(9).reduce(function (a, b) { return a + b.replace(',', '') * 1; }, 0) / rows.count();
                        var sal = rows.data().pluck(10).reduce(function (a, b) { return a + b.replace(',', '') * 1; }, 0) / rows.count();
                        var srl = rows.data().pluck(11).reduce(function (a, b) { return a + b.replace(',', '') * 1; }, 0) / rows.count();

                        sal = $.fn.dataTable.render.number(',', '.', 2, '$').display(sal);
                        avg = $.fn.dataTable.render.number(',', '.', 2, '$').display(avg);
                        estim = $.fn.dataTable.render.number(',', '.', 2, '$').display(estim);
                        impacto = $.fn.dataTable.render.number(',', '.', 2, '$').display(impacto);
                        total = $.fn.dataTable.render.number(',', '.', 2, '$').display(total);
                        srl = $.fn.dataTable.render.number(',', '.', 2, '$').display(srl);
                        //console.log("prueba " + avg);
                        return $('<tr/>')
                            .append('<td class="group" colspan="6"> || ' + group + ' ||  PRESUPUESTO : ' + avg + ' || SALDO ESTIMADO : ' + sal + ' || SALDO REAL : ' + srl + ' || INVERSION ESTIMADO => </td>')
                            .append('<td class="text-right group"><span colspan="1">' + total + '</span></td>')
                            .append('<td class="text-right group"><span colspan="1">' + impacto + '</span></td>')
                            .append('<td class="text-right group"><span colspan="1">' + estim + '</span></td>')
                            .append('<td class="hidden"><span colspan="1">' + avg + '</span></td>')
                            ;
                    },
                    dataSrc: 5
                }
                , "displayLength": 50
                , "drawCallback": function (settings) {
                    var api = this.api();
                    var rows = api.rows({
                        page: 'current'
                    }).nodes();
                    var last = null;
                    api.column(5, {
                        page: 'current'
                    }).data().each(function (group, i) {
                        if (last !== group) {
                            $(rows).eq(i).before('<tr class="group"><td colspan="9">' + group + '</td></tr>');
                            last = group;
                        }
                    });
                }
            });
            //-------------------------
            //-------------------------
            $('table tbody tr a#rel-solGas').click(function () {
                var idEst = $(this).parent().parents('tr').find('td').eq(1).text();
                var actividad = $(this).parent().parents('tr').find('td').eq(2).text();
                $("#act").text(actividad);
                //-----------------------------------
                console.log("entro detalle de gastos sobre las estimaciones");
                //-----------------------------------
                //armo la tabla firma
                $.post('/Estimacion/obtenerSolGas', { id: idEst }, function (data, status) {
                    if (status == "success") {
                        $("#tb_solGas > tbody:last").empty();
                        $.each(data, function (i, item) {
                            //-----------------------------------------------------
                            var id = $("#tb_solGas > tbody > tr").length;
                            row = "<tr>";
                            row += "<td class='text-center'>" + (id + 1) + "</td>";
                            row += "<td class='text-center'>" + item.cod + "</td>";
                            row += "<td class='text-center'>" + item.tit + "</td>";
                            row += "<td class='text-center'>" + item.est + "</td>";
                            row += "<td class='text-center'>" + item.fec + "</td>";
                            row += "<td class='text-center'>" + item.costo + "</td>";
                            row += "<td class='descargar' ><a target='_blank' id='linkDesc'  title='Solicitud " + item.cod+"'  href='/Marketing/Estimacion/DescargarSolicitud?html=false&id="+item.cod+" '><i class='mdi mdi-briefcase-download' ></i></a></td>";
                            row += "</tr>";
                            $("#tb_solGas > tbody:last").append(row);
                            //-----------------------------------------------------
                        });
                    }
                });
                //-----------------------------------------------
            });
            //-------------------------------------------------------
 
        });
        //*****************************************************
    </script>
}