@model  PortalRoemmers.ViewModels.IndexViewModel
@using PortalRoemmers.Helpers
@using PortalRoemmers.Security
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section css {
    @Styles.Render("~/Content/tablaResponsive_CSS")
    @Styles.Render("~/Content/Galeria_CSS")
    @Styles.Render("~/Content/sweetalert_CSS")
    @Styles.Render("~/Content/selectBusqueda_CSS")
    @Styles.Render("~/Content/datepicker_CSS")
}
<div class="panel panel-default">
    <div class="panel-heading box-title m-b-0"><h2>Mantenimiento de Grupos de Usuarios</h2></div>
    <div class="panel-body">
        <div class="form-group">
            @{ string v = ""; try { v = TempData["mensaje"].ToString(); } catch { }}
            @(new HtmlString(v))
        </div>
        @using (Html.BeginForm("Index", "Grupo", new { menuArea = SessionPersister.ActiveMenu, menuVista = SessionPersister.ActiveVista }, FormMethod.Post))
        {
            <div class="row">
                <div class="col-md-5">
                    <div class="form-group">
                        <label for="desMen">DESDE</label>
                    </div>
                </div>
                <div class="col-md-5">
                    <div class="form-group">
                        <label for="desMen">HASTA</label>
                    </div>
                </div>
                <div class="col-md-2">
                    <span class="input-group-btn">
                        <button class="btn waves-effect waves-light btn-info">
                            <i class="fa fa-search"></i>
                        </button>
                    </span>
                </div>
            </div>
        }
        <br />
        @using (Html.BeginForm("Registrar", "GrupoRRHH", new { Area = "RRHH" }, FormMethod.Get))
        {
            <div class="col-sm-12">
                <div class="col-sm-2"></div>
                <div class="col-sm-8">
                    <div class="user-btm-box">
                        <div class="row">
                            <div class="col-md-12 text-center">
                                <dl>
                                    <dt>INGRESE LOS DATOS DE GRUPOS</dt>
                                    <dd>Puede crear varios Grupos</dd>
                                </dl>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 text-center">
                                <button type="submit" class="btn btn-info btn-rounded">Crear Grupo</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-2"></div>
            </div>
        }

        <div class="row">
            <div class="col-sm-12">
                <dl>
                    <dt>GRUPOS DE USUARIOS</dt>
                </dl>
            </div>
            <div class="col-sm-12">
                <table class="table-bordered table-hover table" data-tablesaw-mode="swipe">
                    <thead>
                        <tr>
                            <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="persist"></th>
                            <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="1">C&oacutedigo</th>
                            <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="2">Descripción</th>
                            <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="3">Fecha de Creación</th>
                            <th scope="col" data-tablesaw-sortable-col data-tablesaw-priority="3">Estado</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.GrupoRRHH)
                        {
                        <tr>
                            <td class="text-nowrap" align="center">
                                <a href="@MyExtensions.ActionUrl("Visualizar", "GrupoRRHH", new { Area = "RRHH", id = item.idGrupoRrhh })" data-toggle="tooltip" title="Visualizar"> <i class="fa fa-eye text-inverse m-r-10"></i> </a>
                                <a href="@MyExtensions.ActionUrl("Modificar", "GrupoRRHH", new { Area = "RRHH", id = item.idGrupoRrhh })" data-toggle="tooltip" title="Editar"> <i class="fa fa-pencil text-inverse m-r-10"></i> </a>
                                @if (item.idEstado == ConstantesGlobales.estadoActivo)
                                {
                                    <a data-toggle="tooltip" title="Anular" id="sa-params-anul"> <i class="fa fa-close text-danger"></i> </a>
                                }
                                else
                                {
                                    <a data-toggle="tooltip" title="Activar" id="sa-params-activ"> <i class="fa fa-check" style="color:#2cabe3;"></i> </a>
                                }                                
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.idGrupoRrhh)</td>
                            <td>@Html.DisplayFor(modelItem => item.descGrupo)</td>
                            <td>@Html.DisplayFor(modelItem => item.usufchCrea)</td>
                            <td>@{ 
                                    if (item.idEstado == ConstantesGlobales.estadoActivo)
                                    {
                                        <strong style="color: #2cabe3">@Html.DisplayFor(modelItem => item.estado.nomEst)</strong>
                                    }
                                    else { 
                                        <strong style="color: #dd6b55">@Html.DisplayFor(modelItem => item.estado.nomEst)</strong>
                                    }
                                }
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="panel-footer"></div>
</div>




@section scripts
{
    <script src="~/Areas/RRHH/Scripts/RRHH.js"></script>
    @Scripts.Render("~/Bundles/autocompletado_JS")
    @Scripts.Render("~/Bundles/selectBusqueda_JS")
    @Scripts.Render("~/Bundles/datepicker_JS")
    @Scripts.Render("~/Bundles/bloqueo_JS")

    <script>
        $(document).ready(function () {
            $("table tbody tr").each(function () {
                var estado = $(this).parent().parents('tr').find('td').eq(5).val();
                console.log(estado);
            });
            $('.datepicker').datepicker({
                dateFormat: 'dd/mm/yy'
            });

            $('table tbody tr a#sa-params-anul').click(function () {
                var idGrupoRrhh = $(this).parent().parents('tr').find('td').eq(1).text();
                console.log("num", idGrupoRrhh);
                swal({
                    title: "¿Estás seguro?",
                    text: "¡Va a anular el grupo! \n",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Sí, anularlo!",
                    cancelButtonText: "No, no anularlo!",
                    closeOnConfirm: false,
                    closeOnCancel: false
                }, function (isConfirm) {
                    if (isConfirm) {
                        var Options = {};
                        Options.url = "/GrupoRRHH/anularGrupo";
                        Options.type = "POST";
                        Options.data = JSON.stringify({ idGrupoRrhh: idGrupoRrhh });
                        Options.datatype = "json";
                        Options.contentType = "application/json";
                        Options.success = function (data) {
                            if (data) {
                                swal("Anulado!", "El grupo ha sido anulado.", "success");
                                setTimeout(function () {
                                    location.reload();
                                }, 2000);
                            } else {
                                swal("Ocurrio un problema!", "El grupo no ha sido anulado.", "error");
                            }
                        };
                        Options.error = function () { alert("Error in Getting States!!"); unblock(); };
                        $.ajax(Options);
                    } else {
                        swal("Cancelado", "El grupo está seguro.)", "error");
                    }
                });
            });

            $('table tbody tr a#sa-params-activ').click(function () {
                var idGrupoRrhh = $(this).parent().parents('tr').find('td').eq(1).text();
                console.log("num", idGrupoRrhh);
                swal({
                    title: "¿Estás seguro?",
                    text: "¡Va a activar el grupo! \n",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#2cabe3",
                    confirmButtonText: "Sí, activarlo!",
                    cancelButtonText: "No, no activarlo!",
                    closeOnConfirm: false,
                    closeOnCancel: false
                }, function (isConfirm) {
                    if (isConfirm) {
                        var Options = {};
                        Options.url = "/GrupoRRHH/activarGrupo";
                        Options.type = "POST";
                        Options.data = JSON.stringify({ idGrupoRrhh: idGrupoRrhh });
                        Options.datatype = "json";
                        Options.contentType = "application/json";
                        Options.success = function (data) {
                            if (data) {
                                swal("Activado!", "El grupo ha sido activado.", "success");
                                setTimeout(function () {
                                    location.reload();
                                }, 2000);
                            } else {
                                swal("Ocurrio un problema!", "El grupo no ha sido activado.", "error");
                            }
                        };
                        Options.error = function () { alert("Error in Getting States!!"); unblock(); };
                        $.ajax(Options);
                    } else {
                        swal("Cancelado", "El grupo sigue anulado.)", "error");
                    }
                });
            });

        });
    </script>
}